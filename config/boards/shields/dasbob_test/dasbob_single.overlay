/*
 * DASBOB Single Controller Configuration
 * Both halves wired to one controller via TRRS
 */

#include <dt-bindings/zmk/matrix_transform.h>

/ {
    chosen {
        zmk,kscan = &kscan0;
        zmk,matrix_transform = &default_transform;
    };

    default_transform: keymap_transform_0 {
        compatible = "zmk,matrix-transform";
        columns = <10>;
        rows = <4>;
        map = <
            RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4)    RC(0,5) RC(0,6) RC(0,7) RC(0,8) RC(0,9)
            RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4)    RC(1,5) RC(1,6) RC(1,7) RC(1,8) RC(1,9)
            RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4)    RC(2,5) RC(2,6) RC(2,7) RC(2,8) RC(2,9)
                            RC(3,0) RC(3,1) RC(3,2)    RC(3,3) RC(3,4) RC(3,5)
        >;
    };

    kscan0: kscan {
        compatible = "zmk,kscan-gpio-direct";
        label = "KSCAN";
        
        input-gpios
            // Left half - Row 0 (Q W E R T)
            = <&gpio0 13 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>   // Q
            , <&gpio0 28 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>   // W  
            , <&gpio0 12 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>   // E
            , <&gpio0 29 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>   // R
            , <&gpio0 0 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>    // T
            
            // Right half - Row 0 (Y U I O P) - via TRRS
            , <&gpio0 1 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>    // Y
            , <&gpio0 2 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>    // U
            , <&gpio0 3 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>    // I
            , <&gpio0 5 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>    // O
            , <&gpio0 15 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>   // P
            
            // Left half - Row 1 (A S D F G)
            , <&gpio0 22 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>   // A
            , <&gpio0 14 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>   // S
            , <&gpio0 26 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>   // D
            , <&gpio0 4 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>    // F
            , <&gpio0 27 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>   // G
            
            // Right half - Row 1 (H J K L ;) - via TRRS
            , <&gpio0 17 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>   // H
            , <&gpio0 18 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>   // J
            , <&gpio0 19 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>   // K
            , <&gpio0 24 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>   // L
            , <&gpio0 25 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>   // ;
            
            // Left half - Row 2 (Z X C V B)
            , <&gpio0 21 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>   // Z
            , <&gpio0 23 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>   // X
            , <&gpio0 7 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>    // C
            , <&gpio0 20 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>   // V
            , <&gpio0 6 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>    // B
            
            // Right half - Row 2 (N M , . /) - via TRRS
            , <&gpio0 10 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>   // N
            , <&gpio0 11 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>   // M
            , <&gpio0 30 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>   // ,
            , <&gpio0 31 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>   // .
            , <&gpio0 32 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>   // /
            
            // Left thumb keys
            , <&gpio0 16 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>   // Left thumb 1
            , <&gpio0 9 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>    // Left thumb 2  
            , <&gpio0 8 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>    // Left thumb 3
            
            // Right thumb keys - via TRRS
            , <&gpio0 33 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>   // Right thumb 1
            , <&gpio0 34 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>   // Right thumb 2
            , <&gpio0 35 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>   // Right thumb 3
            ;
    };
};
